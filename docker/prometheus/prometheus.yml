# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'codelab-monitor'
      environment: 'Production'
      service: 'Prometheus'

alerting:
  alertmanagers:
  - static_configs:
    - targets: ["alertmanager:9093"]

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "prometheus.rules.yml"
  # - "first.rules"
  # - "second.rules"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.

  - job_name: 'prometheus'
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    static_configs:
      - targets: ["localhost:${PROMETHEUS_PORT}"]

  - job_name: 'docker'
         # metrics_path defaults to '/metrics'
         # scheme defaults to 'http'.
    static_configs:
      - targets: ['127.0.0.1:9323']

  - job_name: 'FastAPI'
    static_configs:
    - targets: ['fastapi:80']

  - job_name: 'alerta'
    metrics_path: /api/management/metrics
    static_configs:
    - targets: ['alerta:8080']
    basic_auth:
      username: admin@alerta.io
      password: alerta

  - job_name: 'cadvisor'
    scrape_interval: 5s
    scrape_timeout: 2s
    honor_labels: true
    static_configs:
      - targets: ['cadvisor:${CADVISOR_PORT}']
